{"version":3,"sources":["components/Bookmarked.js","components/Nav.js","components/SearchBar.js","components/Planets.js","components/About.js","App.js","index.js"],"names":["Bookmarked","savedPlanets","RemoveFavourite","SavedContainer","Styled","div","map","planet","id","name","onClick","NavStyled","nav","Nav","exact","activeClassName","to","SearchBar","searchHandler","value","type","autoComplete","onChange","e","placeholder","PlanetsStyled","Planets","planets","onSave","useState","setSavedPlanets","Query","setQuery","useEffect","getPlanets","JSON","parse","localStorage","getItem","filteredPlanets","match","RegExp","EscapeString","filter","p","test","console","log","target","el","className","isFavourite","onMouseMove","evnt","parentElement","title","titleHandler","AboutContainer","About","MainContainer","App","AllPlanets","setAllPlanets","FPlanets","setFPlanets","a","axios","get","data","favoriteHandler","closest","UniquePlanets","includes","i","setItem","stringify","currentState","path","render","props","component","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.992a994d.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Styled from \"styled-components\";\r\n\r\nconst Bookmarked = ({ savedPlanets, RemoveFavourite }) => {\r\n  const SavedContainer = Styled.div`\r\n  max-width: 900px;\r\n  margin: 40px auto!important;\r\n  display: grid;\r\n  grid-template-columns: repeat(3, minmax(100px, 1fr));\r\n  justify-content: center;\r\n  gap: 50px;\r\n  align-items: stretch;\r\n  div{\r\n    box-shadow: 0px 0px 2px 1px #000;\r\n    align-items: center;\r\n    font-size: 1.2em;\r\n    flex-basis: 200px;\r\n    text-align: center;\r\n    padding: 20px;\r\n  }\r\n\r\ndiv button{\r\n  width: 100%;\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n  outline: none!important;\r\n  cursor: pointer;\r\n  color: #fff;\r\n  background-color: #dc3545;\r\n  border-color: #dc3545;\r\n  border: 2px solid;\r\n\r\n}\r\n\r\ndiv button:hover{\r\n  background-color: #d86570;\r\n}\r\n  \r\n  .Added i{\r\n    color: red;\r\n  }\r\n  \r\n  `;\r\n\r\n  // const [FavPlanets, setFavPlanets] = useState(savedPlanets);\r\n\r\n  // useEffect(() => {\r\n  //   const FavItems = JSON.parse(localStorage.getItem(\"SP\")) || FavPlanets;\r\n  //   setFavPlanets(FavItems);\r\n  // }, [setFavPlanets]);\r\n\r\n  return (\r\n    <SavedContainer>\r\n      {savedPlanets.map((planet) => {\r\n        return (\r\n          <div key={planet.id} id={planet.id}>\r\n            <h2>{planet.name}</h2>\r\n            <button\r\n              onClick={() => {\r\n                RemoveFavourite(planet);\r\n              }}\r\n            >\r\n              Remove From Favourites\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n    </SavedContainer>\r\n  );\r\n};\r\n\r\nexport default Bookmarked;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Styled from \"styled-components\";\r\n\r\nconst NavStyled = Styled.nav`\r\n  width: 100%;\r\n  height: 60px;\r\n  background-color: #000;\r\n  color: #fff;\r\n\r\n ul {\r\n   height: 100%;\r\n   list-style:none;\r\n   display: flex;\r\n   gap: 50px;\r\n   align-content: center;\r\n   justify-content: center;\r\n   box-sizing: border-box;\r\n   align-items: center;\r\n } \r\n\r\n ul li a{\r\n   text-decoration: none;\r\n   color: #fff;\r\n }\r\n\r\n .active{\r\n   color: red\r\n }\r\n\r\n`;\r\n\r\nfunction Nav() {\r\n  return (\r\n    <NavStyled>\r\n      <ul>\r\n        <li>\r\n          <NavLink exact activeClassName=\"active\" to=\"/\">\r\n            HOME\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink exact to=\"/favouritePlanets\">\r\n            FAVOURITES\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink exact to=\"/about\">\r\n            ABOUT\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </NavStyled>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\nconst SearchBar = ({ searchHandler, value }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      autoComplete=\"true\"\r\n      value={value}\r\n      onChange={(e) => {\r\n        searchHandler(e);\r\n      }}\r\n      placeholder=\"Search Planets\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import Styled from \"styled-components\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport EscapeString from \"escape-string-regexp\";\r\n\r\nconst PlanetsStyled = Styled.div`\r\nmax-width: 900px;\r\nmargin: 40px auto!important;\r\nul {\r\n  height: 100vh;\r\n  display: grid;\r\n  list-style: none;\r\n  grid-template-columns: repeat(4, minmax(100px, 1fr));\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 40px;\r\n}\r\nli{\r\n  box-shadow: 0px 0px 2px 1px #000;\r\n  display: grid;\r\n  justify-content: center;\r\n  height: 150px;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  font-size: 1.2em;\r\n}\r\n\r\nli span{\r\n  text-align: center;\r\n  font-size: 1.4em;\r\n  cursor: pointer;\r\n}\r\n\r\ninput{\r\n  height: 40px;\r\n  padding-left: 10px;\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n  font-size: 16px;\r\n}\r\n\r\n.Added i{\r\n  color: red;\r\n}\r\n\r\n`;\r\n\r\nfunction Planets({ planets, onSave }) {\r\n  const [SavedPlanets, setSavedPlanets] = useState([]);\r\n  const [Query, setQuery] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const getPlanets = JSON.parse(localStorage.getItem(\"SP\")) || planets;\r\n    setSavedPlanets(getPlanets);\r\n  }, [setSavedPlanets]);\r\n\r\n  const searchHandler = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  let filteredPlanets = [];\r\n  if (Query) {\r\n    const match = new RegExp(EscapeString(Query), \"i\");\r\n    filteredPlanets = planets.filter((p) => match.test(p.name));\r\n    console.log(filteredPlanets);\r\n  } else {\r\n    filteredPlanets = planets;\r\n    console.log(filteredPlanets);\r\n  }\r\n\r\n  function titleHandler(evnt) {\r\n    if (evnt.target.parentElement.className === \"Added\") {\r\n      evnt.target.parentElement.title = \"Remove From Favourites\";\r\n    } else {\r\n      evnt.target.parentElement.title = \"Add To Favourites\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PlanetsStyled>\r\n      <SearchBar value={Query} searchHandler={searchHandler} />\r\n      <ul>\r\n        {filteredPlanets.map((el) => {\r\n          return (\r\n            <li key={el.id}>\r\n              {el.name}\r\n              <span\r\n                className={el.isFavourite === true ? \"Added\" : \"Removed\"}\r\n                id={el.id}\r\n                onClick={(e) => {\r\n                  onSave(e, el);\r\n                }}\r\n                onMouseMove={(evnt) => {\r\n                  titleHandler(evnt);\r\n                }}\r\n              >\r\n                <i className=\"fas fa-heart\"></i>\r\n              </span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </PlanetsStyled>\r\n  );\r\n}\r\n\r\nexport default Planets;\r\n","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\n\r\nconst AboutContainer = Styled.div`\r\n    background-color: #000;\r\n    color: #fff;\r\n    width: 100%;\r\n    display: grid;\r\n    align-items: center;\r\n    max-width: 900px;\r\n    margin: 10% auto!important;\r\n    height: 200px;\r\n    text-align: center;\r\n    padding: 20px;\r\n    font-size: 1.3em;\r\n\r\n#author{\r\n    font-size: 2.2em;\r\n    display: block;\r\n    margin: 20px 0px;\r\n}\r\n\r\n\r\n`;\r\n\r\nconst About = () => {\r\n  return (\r\n    <AboutContainer>\r\n      <p>\r\n        Created By\r\n        <span id=\"author\">MM Nauman</span>\r\n      </p>\r\n    </AboutContainer>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Styled from \"styled-components\";\nimport Bookmarked from \"./components/Bookmarked\";\nimport Nav from \"./components/Nav\";\nimport Planets from \"./components/Planets\";\nimport axios from \"axios\";\nimport About from \"./components/About\";\n\nconst MainContainer = Styled.div`\n  *{\n    margin: 0px;\n    padding: 0px;\n  }\n  body{\n    margin: 0px!important;\n  }\n.Added{\n  color: red;\n}\n\n`;\n\nfunction App() {\n  const [AllPlanets, setAllPlanets] = useState([]);\n  const [FPlanets, setFPlanets] = useState([]);\n  const [SearchedText, setSearchedText] = useState(\"\");\n\n  useEffect(() => {\n    async function getPlanets() {\n      const { data } = await axios.get(\n        \"https://assignment-machstatz.herokuapp.com/planet\"\n      );\n      console.log(data);\n      setAllPlanets(data);\n    }\n    getPlanets();\n  }, [setAllPlanets]);\n\n  const favoriteHandler = (e, el) => {\n    console.log(e.target, el);\n    el.isFavourite = true;\n    if (el.isFavourite === true) {\n      e.target.closest(\"span\").className = \"Added\";\n    } else {\n      e.target.closest(\"span\").className = \"removed\";\n    }\n    const UniquePlanets = FPlanets.includes(el)\n      ? FPlanets.filter((i) => {\n          el.isFavourite = false;\n          return i !== el;\n        }) // remove item\n      : [...FPlanets, el];\n\n    setFPlanets(UniquePlanets);\n    localStorage.setItem(\"SP\", JSON.stringify(UniquePlanets));\n  };\n\n  const RemoveFavourite = (planet) => {\n    planet.isFavourite = false;\n    console.log(planet);\n    return setFPlanets((currentState) => {\n      return currentState.filter((p) => {\n        return planet.id !== p.id;\n      });\n    });\n  };\n\n  return (\n    <MainContainer>\n      <Nav />\n      <Route\n        exact\n        path=\"/\"\n        render={(props) => (\n          <Planets {...props} onSave={favoriteHandler} planets={AllPlanets} />\n        )}\n      ></Route>\n\n      <Route\n        path=\"/favouritePlanets\"\n        render={(props) => (\n          <Bookmarked\n            RemoveFavourite={RemoveFavourite}\n            {...props}\n            savedPlanets={FPlanets}\n          />\n        )}\n      ></Route>\n\n      <Route exact path=\"/about\" component={About} />\n    </MainContainer>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./Global.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}